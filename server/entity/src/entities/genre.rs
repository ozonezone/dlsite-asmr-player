//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.0-rc.2

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize, Deserialize, rspc :: Type)]
#[sea_orm(table_name = "genre")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub id: String,
    pub name: String,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::product_genre::Entity")]
    ProductGenre,
    #[sea_orm(has_many = "super::product_user_genre::Entity")]
    ProductUserGenre,
}

impl Related<super::product_genre::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::ProductGenre.def()
    }
}

impl Related<super::product_user_genre::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::ProductUserGenre.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
